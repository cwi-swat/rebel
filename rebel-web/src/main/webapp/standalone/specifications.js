var specs = [ 
	{ 
		"fqn":"booking.sepa.ct.OnUsCreditTransfer",  
		"name":"OnUsCreditTransfer", 
		"documentation":"The On Us Credit Transfer represents a SEPA CT transaction between two (ordering and beneficiary) ING accounts", 
		"modifier":"", 
		"inheritsFrom": {}, 
		"extendedBy":[], 
		"fields":[{"name":"amount", "type":"Money"}, 
		          {"name":"beneficiaryAccount", "type":"IBAN"}, 
		          {"name":"rejectReasons", "type":"set[String]"}, 
		          {"name":"orderingAccount", "type":"IBAN"}, 
		          {"name":"receivedTime", "type":"DateTime"}, 
		          {"name":"id", "type":"Integer"}, 
		          {"name":"actualExecutionDate", "type":"Date"}, 
		          {"name":"requestedExecutionDate", "type":"Date"}], 
		"events":[{ 
		          	"id": "event_validated_authorize_authorized", 
		          	"label": "authorize", 
		          	"doc": "Authorization of the order happens outside the scope of the order entity itself and therefore does not contain any extra constraints", 
		          	"config": [], 
		           	"params": [], 
		           	"preconditions": [], 
		           	"postconditions": [], 
		           	"sync": [] 
		          	}, 
		          { 
		          	"id": "event_authorized_fail_failed", 
		          	"label": "fail", 
		          	"doc": "", 
		          	"config": [], 
		           	"params": [], 
		           	"preconditions": [], 
		           	"postconditions": [], 
		           	"sync": [] 
		          	}, 
		          { 
		          	"id": "event_authorized_book_booked", 
		          	"label": "book", 
		          	"doc": "Book triggers the actual wiring of money between the accounts.", 
		          	"config": [], 
		           	"params": [], 
		           	"preconditions": [{"doc":"The order can only be executed on the execution date", "code":"now.date == this.actualExecutionDate"}], 
		           	"postconditions": [], 
		           	"sync": [{"doc":"Withdraw the money from the ordering account", "code":"ExternalAccount[this.orderingAccount].withdraw(this.amount)"},{"doc":"Deposit the money to the beneficiary account", "code":"ExternalAccount[this.beneficiaryAccount].deposit(this.amount)"}] 
		          	}, 
		          { 
		          	"id": "event_received_reject_rejected", 
		          	"label": "reject", 
		          	"doc": "An order can be rejected for different reasons", 
		          	"config": [], 
		           	"params": [], 
		           	"preconditions": [], 
		           	"postconditions": [{"code":"this.amount.currency != EUR -> \"Currency not in Euros\" in new this.rejectReasons;"},{"code":"((this.requestedExecutionDate - now.date > 183 Day) || (now.date - this.requestedExecutionDate > 5 Day)) -> \"Requested execution date not within SEPA range\" in new this.rejectReasons;"}], 
		           	"sync": [] 
		          	}, 
		          { 
		          	"id": "event_init_create_received", 
		          	"label": "create", 
		          	"doc": "Create a new Sepa CT on us credit transfer", 
		          	"config": [], 
		           	"params": [{"name":"id", "type":"Integer"},{"name":"orderingAccount", "type":"IBAN"},{"name":"beneficiaryAccount", "type":"IBAN"},{"name":"requestedExecutionDate", "type":"Date"},{"name":"amount", "type":"Money"}], 
		           	"preconditions": [], 
		           	"postconditions": [{"code":"new this.orderingAccount == orderingAccount;"},{"code":"new this.beneficiaryAccount == beneficiaryAccount;"},{"code":"new this.requestedExecutionDate == requestedExecutionDate;"},{"code":"new this.receivedTime == now;"},{"code":"new this.amount == amount;"}], 
		           	"sync": [] 
		          	}, 
		          { 
		          	"id": "event_received_validate_validated", 
		          	"label": "validate", 
		          	"doc": "", 
		          	"config": [{"name":"sepaCountryCodes", "type":"set[String]", "value":"= {\"NL\",\"BE\",\"DE\",\"FR\"}"}], 
		           	"params": [], 
		           	"preconditions": [{"doc":"SEPA CT only accepts EUR payments, TODO: What is the maximum allowed amount?", "code":"this.amount.currency == EUR"},{"code":"this.amount > EUR 0.00;"},{"doc":"The executionDate must be within 183 days of the received date and can be maximum 5 days in the past", "code":"this.requestedExecutionDate - now.date <= 183 Day"},{"code":"now.date - this.requestedExecutionDate <= 5 Day;"},{"code":"this.beneficiaryAccount.countryCode in {\"NL\",\"BE\",\"DE\",\"FR\"};"},{"code":"this.orderingAccount.countryCode in {\"NL\",\"BE\",\"DE\",\"FR\"};"},{"code":"this.orderingAccount.countryCode == this.beneficiaryAccount.countryCode;"},{"code":"initialized ExternalAccount[this.orderingAccount];"},{"code":"initialized ExternalAccount[this.beneficiaryAccount];"}], 
		           	"postconditions": [{"doc":"If the requested received date lies before the current date (now) than set it to today, otherwise use the requested execution date as the actual execution date", "code":"new this.actualExecutionDate == nextCorrectExecutionDate(this.requestedExecutionDate, now.date)"}], 
		           	"sync": [] 
		          	}, 
		          { 
		          	"id": "event_authorized_cancel_cancelled", 
		          	"label": "cancel", 
		          	"doc": "Cancellation of the order happens outside the scope of the order entity itself and therefore does not contain any extra constraints", 
		          	"config": [], 
		           	"params": [], 
		           	"preconditions": [], 
		           	"postconditions": [{"code":"\"User cancelled transaction\" in this.rejectReasons;"}], 
		           	"sync": [] 
		          	}, 
		          { 
		          	"id": "event_validated_cancel_cancelled", 
		          	"label": "cancel", 
		          	"doc": "Cancellation of the order happens outside the scope of the order entity itself and therefore does not contain any extra constraints", 
		          	"config": [], 
		           	"params": [], 
		           	"preconditions": [], 
		           	"postconditions": [{"code":"\"User cancelled transaction\" in this.rejectReasons;"}], 
		           	"sync": [] 
		          	}], 
		"states":[{"id":"state_booked", "label":"", "final": true}, 
		          {"id":"state_validated", "label":"validated"}, 
		          {"id":"state_received", "label":"received"}, 
		          {"id":"state_authorized", "label":"authorized"}, 
		          {"id":"state_failed", "label":"", "final": true}, 
		          {"id":"state_rejected", "label":"", "final": true}, 
		          {"id":"state_cancelled", "label":"", "final": true}, 
		          {"id":"state_init", "label":"init"}], 
		"transitions":[{"from":"state_received", "to":"state_rejected", "via":"event_received_reject_rejected"}, 
		               {"from":"state_received", "to":"state_validated", "via":"event_received_validate_validated"}, 
		               {"from":"state_authorized", "to":"state_cancelled", "via":"event_authorized_cancel_cancelled"}, 
		               {"from":"state_authorized", "to":"state_failed", "via":"event_authorized_fail_failed"}, 
		               {"from":"state_authorized", "to":"state_booked", "via":"event_authorized_book_booked"}, 
		               {"from":"state_init", "to":"state_received", "via":"event_init_create_received"}, 
		               {"from":"state_validated", "to":"state_cancelled", "via":"event_validated_cancel_cancelled"}, 
		               {"from":"state_validated", "to":"state_authorized", "via":"event_validated_authorize_authorized"}], 
		"externalMachines":[{"id":"externalmachine_ExternalAccount", "label":"ExternalAccount", "url":"booking.sepa.ct.ExternalAccount", "referenceType":"out"}, 
		                    {"id":"externalmachine_CreditTransferBatch", "label":"CreditTransferBatch", "url":"booking.sepa.ct.CreditTransferBatch", "referenceType":"in"}], 
		"transitionsToExternalMachines":[{"from":"event_authorized_book_booked", "to":"externalmachine_ExternalAccount", "toEvent":"event_withdraw"}, 
		                                 {"from":"event_received_validate_validated", "to":"externalmachine_ExternalAccount"}, 
		                                 {"from":"event_authorized_book_booked", "to":"externalmachine_ExternalAccount", "toEvent":"event_deposit"}], 
		"transitionsFromExternalMachines":[] 
	}, 
	{ 
		"fqn":"booking.sepa.ct.ExternalAccount",  
		"name":"ExternalAccount", 
		"documentation":"", 
		"modifier":"external", 
		"inheritsFrom": {}, 
		"extendedBy":[], 
		"fields":[], 
		"events":[], 
		"states":[], 
		"transitions":[], 
		"externalMachines":[{"id":"externalmachine_OnUsCreditTransfer", "label":"OnUsCreditTransfer", "url":"booking.sepa.ct.OnUsCreditTransfer", "referenceType":"in"}], 
		"transitionsToExternalMachines":[], 
		"transitionsFromExternalMachines":[] 
	}, 
	{ 
		"fqn":"booking.sepa.ct.CreditTransferBatch",  
		"name":"CreditTransferBatch", 
		"documentation":"", 
		"modifier":"", 
		"inheritsFrom": {}, 
		"extendedBy":[], 
		"fields":[{"name":"nrOfBookings", "type":"Integer"}, 
		          {"name":"id", "type":"Integer"}, 
		          {"name":"bookingsInBatch", "type":"set[Integer]"}], 
		"events":[{ 
		          	"id": "event_received_cancelCT_cancelled", 
		          	"label": "cancelCT", 
		          	"doc": "", 
		          	"config": [], 
		           	"params": [], 
		           	"preconditions": [{"code":"|{id: this.bookingsInBatch | OnUsCreditTransfer[id] instate cancelled}| == this.nrOfBookings;"}], 
		           	"postconditions": [], 
		           	"sync": [] 
		          	}, 
		          { 
		          	"id": "event_init_receiveCT_received", 
		          	"label": "receiveCT", 
		          	"doc": "", 
		          	"config": [], 
		           	"params": [{"name":"nrOfBookings", "type":"Integer"}], 
		           	"preconditions": [{"code":"nrOfBookings > 0;"}], 
		           	"postconditions": [{"code":"new this.nrOfBookings == nrOfBookings;"}], 
		           	"sync": [] 
		          	}, 
		          { 
		          	"id": "event_received_finalizeCT_done", 
		          	"label": "finalizeCT", 
		          	"doc": "", 
		          	"config": [{"name":"succesfulBookingsNeeded", "type":"Percentage", "value":"= 90%"}], 
		           	"params": [], 
		           	"preconditions": [{"code":"|{id: this.bookingsInBatch | OnUsCreditTransfer[id] instate booked}| > (this.nrOfBookings * 90%);"}], 
		           	"postconditions": [], 
		           	"sync": [] 
		          	}, 
		          { 
		          	"id": "event_received_failCT_failed", 
		          	"label": "failCT", 
		          	"doc": "", 
		          	"config": [], 
		           	"params": [], 
		           	"preconditions": [{"code":"|{id: this.bookingsInBatch | OnUsCreditTransfer[id] instate {rejected, failed}}| == this.nrOfBookings;"}], 
		           	"postconditions": [], 
		           	"sync": [] 
		          	}], 
		"states":[{"id":"state_failed", "label":"", "final": true}, 
		          {"id":"state_cancelled", "label":"", "final": true}, 
		          {"id":"state_init", "label":"init"}, 
		          {"id":"state_received", "label":"received"}, 
		          {"id":"state_done", "label":"", "final": true}], 
		"transitions":[{"from":"state_init", "to":"state_received", "via":"event_init_receiveCT_received"}, 
		               {"from":"state_received", "to":"state_done", "via":"event_received_finalizeCT_done"}, 
		               {"from":"state_received", "to":"state_cancelled", "via":"event_received_cancelCT_cancelled"}, 
		               {"from":"state_received", "to":"state_failed", "via":"event_received_failCT_failed"}], 
		"externalMachines":[{"id":"externalmachine_OnUsCreditTransfer", "label":"OnUsCreditTransfer", "url":"booking.sepa.ct.OnUsCreditTransfer", "referenceType":"out"}], 
		"transitionsToExternalMachines":[{"from":"event_received_failCT_failed", "to":"externalmachine_OnUsCreditTransfer"}, 
		                                 {"from":"event_received_finalizeCT_done", "to":"externalmachine_OnUsCreditTransfer"}, 
		                                 {"from":"event_received_cancelCT_cancelled", "to":"externalmachine_OnUsCreditTransfer"}], 
		"transitionsFromExternalMachines":[] 
	} 
]; 
