var specs = [ 
	{ 
		"fqn":"example.Agreement",  
		"name":"Agreement", 
		"documentation":"", 
		"modifier":"", 
		"inheritsFrom": {}, 
		"extendedBy":[], 
		"fields":[{"name":"withdrawLimit", "type":"Money"}, 
		          {"name":"id", "type":"Integer"}], 
		"events":[{ 
		          	"id": "event_init_createAgreement_opened", 
		          	"label": "createAgreement", 
		          	"doc": "", 
		          	"config": [], 
		           	"params": [{"name":"id", "type":"Integer"},{"name":"withdrawLimit", "type":"Money"}], 
		           	"preconditions": [{"code":"withdrawLimit >= EUR 0.00;"}], 
		           	"postconditions": [], 
		           	"sync": [] 
		          	}, 
		          { 
		          	"id": "event_opened_closeAgreement_closed", 
		          	"label": "closeAgreement", 
		          	"doc": "", 
		          	"config": [], 
		           	"params": [], 
		           	"preconditions": [], 
		           	"postconditions": [], 
		           	"sync": [] 
		          	}, 
		          { 
		          	"id": "event_opened_canWithdrawAmount_opened", 
		          	"label": "canWithdrawAmount", 
		          	"doc": "", 
		          	"config": [], 
		           	"params": [{"name":"amount", "type":"Money"}], 
		           	"preconditions": [{"code":"amount >= EUR 0.00;"},{"code":"amount <= this.withdrawLimit;"}], 
		           	"postconditions": [], 
		           	"sync": [] 
		          	}], 
		"states":[{"id":"state_opened", "label":"opened"}, 
		          {"id":"state_closed", "label":"", "final": true}, 
		          {"id":"state_init", "label": "", "initial": true}], 
		"transitions":[{"from":"state_init", "to":"state_opened", "via":"event_init_createAgreement_opened"}, 
		               {"from":"state_opened", "to":"state_opened", "via":"event_opened_canWithdrawAmount_opened"}, 
		               {"from":"state_opened", "to":"state_closed", "via":"event_opened_closeAgreement_closed"}], 
		"externalMachines":[{"id":"externalmachine_SepaCreditTransfer", "label":"SepaCreditTransfer", "url":"example.SepaCreditTransfer", "referenceType":"in"}], 
		"transitionsToExternalMachines":[], 
		"transitionsFromExternalMachines":[{"fromMachine":"externalmachine_SepaCreditTransfer", "fromEvent":"event_created_rejectWithdrawAmountOutsideLimit_rejectedWithdrawAmountOutsideLimit", "to":"event_opened_canWithdrawAmount_opened"}, 
		                                   {"fromMachine":"externalmachine_SepaCreditTransfer", "fromEvent":"event_created_validateSepaCT_validated", "to":"event_opened_canWithdrawAmount_opened"}] 
	}, 
	{ 
		"fqn":"example.SepaCreditTransfer",  
		"name":"SepaCreditTransfer", 
		"documentation":"", 
		"modifier":"", 
		"inheritsFrom": {"name":"Product", "url":"example.Product"}, 
		"extendedBy":[], 
		"fields":[{"name":"amount", "type":"Money"}, 
		          {"name":"customerId", "type":"Integer"}, 
		          {"name":"id", "type":"Integer"}, 
		          {"name":"from", "type":"IBAN"}, 
		          {"name":"agreementId", "type":"Integer"}, 
		          {"name":"to", "type":"IBAN"}], 
		"events":[{ 
		          	"id": "event_created_rejectIncorrectCustomer_rejectedIncorrectCustomer", 
		          	"label": "rejectIncorrectCustomer", 
		          	"doc": "", 
		          	"config": [], 
		           	"params": [], 
		           	"preconditions": [{"code":"finalized Customer[this.customerId];"}], 
		           	"postconditions": [], 
		           	"sync": [] 
		          	}, 
		          { 
		          	"id": "event_created_rejectNegativeAmount_rejectedNegativeAmount", 
		          	"label": "rejectNegativeAmount", 
		          	"doc": "", 
		          	"config": [], 
		           	"params": [], 
		           	"preconditions": [{"code":"this.amount <= EUR 0.00;"}], 
		           	"postconditions": [], 
		           	"sync": [] 
		          	}, 
		          { 
		          	"id": "event_init_createSepaCT_created", 
		          	"label": "createSepaCT", 
		          	"doc": "", 
		          	"config": [], 
		           	"params": [{"name":"transactionId", "type":"Integer"},{"name":"agreementId", "type":"Integer"},{"name":"customerId", "type":"Integer"},{"name":"from", "type":"IBAN"},{"name":"to", "type":"IBAN"},{"name":"amount", "type":"Money"}], 
		           	"preconditions": [], 
		           	"postconditions": [{"code":"new this.id == transactionId;"},{"code":"new this.from == from;"},{"code":"new this.to == to;"},{"code":"new this.amount == amount;"},{"code":"new this.customerId == customerId;"},{"code":"new this.agreementId == agreementId;"}], 
		           	"sync": [] 
		          	}, 
		          { 
		          	"id": "event_created_rejectWithdrawAmountOutsideLimit_rejectedWithdrawAmountOutsideLimit", 
		          	"label": "rejectWithdrawAmountOutsideLimit", 
		          	"doc": "", 
		          	"config": [], 
		           	"params": [], 
		           	"preconditions": [], 
		           	"postconditions": [], 
		           	"sync": [{"code":"not Agreement[this.agreementId].canWithdrawAmount(amount);"}] 
		          	}, 
		          { 
		          	"id": "event_created_validateSepaCT_validated", 
		          	"label": "validateSepaCT", 
		          	"doc": "", 
		          	"config": [], 
		           	"params": [], 
		           	"preconditions": [{"code":"initialized Customer[this.customerId];"},{"code":"this.amount > EUR 0.00;"}], 
		           	"postconditions": [], 
		           	"sync": [{"code":"Agreement[this.agreementId].canWithdrawAmount(amount);"}] 
		          	}], 
		"states":[{"id":"state_validated", "label":"validated"}, 
		          {"id":"state_rejectedWithdrawAmountOutsideLimit", "label":"", "final": true}, 
		          {"id":"state_created", "label":"created"}, 
		          {"id":"state_rejectedNegativeAmount", "label":"", "final": true}, 
		          {"id":"state_rejectedIncorrectCustomer", "label":"", "final": true}, 
		          {"id":"state_init", "label": "", "initial": true}], 
		"transitions":[{"from":"state_created", "to":"state_rejectedNegativeAmount", "via":"event_created_rejectNegativeAmount_rejectedNegativeAmount"}, 
		               {"from":"state_init", "to":"state_created", "via":"event_init_createSepaCT_created"}, 
		               {"from":"state_created", "to":"state_rejectedWithdrawAmountOutsideLimit", "via":"event_created_rejectWithdrawAmountOutsideLimit_rejectedWithdrawAmountOutsideLimit"}, 
		               {"from":"state_created", "to":"state_rejectedIncorrectCustomer", "via":"event_created_rejectIncorrectCustomer_rejectedIncorrectCustomer"}, 
		               {"from":"state_created", "to":"state_validated", "via":"event_created_validateSepaCT_validated"}], 
		"externalMachines":[{"id":"externalmachine_Agreement", "label":"Agreement", "url":"example.Agreement", "referenceType":"out"}, 
		                    {"id":"externalmachine_Customer", "label":"Customer", "url":"example.Customer", "referenceType":"out"}], 
		"transitionsToExternalMachines":[{"from":"event_created_rejectIncorrectCustomer_rejectedIncorrectCustomer", "to":"externalmachine_Customer"}, 
		                                 {"from":"event_created_validateSepaCT_validated", "to":"externalmachine_Customer"}, 
		                                 {"from":"event_created_validateSepaCT_validated", "to":"externalmachine_Agreement", "toEvent":"event_canWithdrawAmount"}, 
		                                 {"from":"event_created_rejectWithdrawAmountOutsideLimit_rejectedWithdrawAmountOutsideLimit", "to":"externalmachine_Agreement", "toEvent":"event_canWithdrawAmount"}], 
		"transitionsFromExternalMachines":[] 
	}, 
	{ 
		"fqn":"example.Customer",  
		"name":"Customer", 
		"documentation":"", 
		"modifier":"", 
		"inheritsFrom": {}, 
		"extendedBy":[], 
		"fields":[{"name":"id", "type":"Integer"}, 
		          {"name":"name", "type":"String"}], 
		"events":[{ 
		          	"id": "event_init_createCustomer_active", 
		          	"label": "createCustomer", 
		          	"doc": "", 
		          	"config": [], 
		           	"params": [{"name":"id", "type":"Integer"},{"name":"name", "type":"String"}], 
		           	"preconditions": [], 
		           	"postconditions": [{"code":"new this.id == id;"},{"code":"new this.name == name;"}], 
		           	"sync": [] 
		          	}, 
		          { 
		          	"id": "event_active_died_dead", 
		          	"label": "died", 
		          	"doc": "", 
		          	"config": [], 
		           	"params": [], 
		           	"preconditions": [], 
		           	"postconditions": [], 
		           	"sync": [] 
		          	}], 
		"states":[{"id":"state_dead", "label":"", "final": true}, 
		          {"id":"state_init", "label": "", "initial": true}, 
		          {"id":"state_active", "label":"active"}], 
		"transitions":[{"from":"state_active", "to":"state_dead", "via":"event_active_died_dead"}, 
		               {"from":"state_init", "to":"state_active", "via":"event_init_createCustomer_active"}], 
		"externalMachines":[{"id":"externalmachine_SepaCreditTransfer", "label":"SepaCreditTransfer", "url":"example.SepaCreditTransfer", "referenceType":"in"}], 
		"transitionsToExternalMachines":[], 
		"transitionsFromExternalMachines":[] 
	}, 
	{ 
		"fqn":"example.Product",  
		"name":"Product", 
		"documentation":"", 
		"modifier":"abstract", 
		"inheritsFrom": {}, 
		"extendedBy":[{"name":"SepaCreditTransfer", "url":"example.SepaCreditTransfer"}], 
		"fields":[{"name":"id", "type":"Integer"}], 
		"events":[], 
		"states":[], 
		"transitions":[], 
		"externalMachines":[], 
		"transitionsToExternalMachines":[], 
		"transitionsFromExternalMachines":[] 
	} 
]; 
