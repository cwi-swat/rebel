module booking.sepa.dd.OnUsDebitPayment

import booking.sepa.dd.OnUsDebitPaymentLib
import booking.sepa.dd.DebitBooking

specification OnUsDebitPayment extends DebitBooking {
	fields {
		creationDate: Date
	}
	
	events {
		create[]
		book[]
		forceBooking[]
		bookAfterRevolve[]
		revolve[]
		return[]
		denied[]
		needsAdvice[]
		revoke[]
		reject[]
		refundWithin8Weeks[]
		refundAfter8Weeks[]
		reverse[]
		finalize[]
	}
	
	lifeCycle {
		initialized			-> booked: book 	
							-> revolving: revolve
							-> waitingForAdvice: needsAdvice
							-> revoked: revoke
							-> rejected: reject
		booked				-> refunded: refundWithin8Weeks, refundAfter8Weeks
							-> reversed: reverse
							-> irrevocable: finalize
		revolving			-> booked: bookAfterRevolve
							-> returned: return
		waitingForAdvice	-> booked: forceBooking
							-> returned: denied, return
		final returned
		final reversed
		final refunded
		final rejected
		final revoked
		final irrevocable
	}
}